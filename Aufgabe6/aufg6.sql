/*Aufgabenblatt 6*/
/*Aufgaben 6.1*/
/*Index is a pointer to the data on the table
Index on columm firstname or lastname on table personal will be meaningful for example
coz it will be easy to find the information we need.
For example: if we want to know how many people have the same name Alan in our database.
how many children r under 18?
or which machine have the biggest values?
it doent need to scan the whole database, index shows the location where the information locates*/
CREATE INDEX INDEX_NAME ON PERSONAL(VORNAME);
CREATE INDEX INDEX_DATUM ON PRAEMIE(DATUM);
CREATE INDEX INDEX_NEUWERT ON MASCHINE(NEUWERT);
CREATE INDEX INDEX_K_GEB ON KIND(K_GEB);

SELECT *
FROM PERSONAL
WHERE VORNAME ='Ada';

SELECT*
FROM PRAEMIE
WHERE DATUM > '1-11-10';

/*Aufgaben 6.2*/
DROP TABLE STUDENT;
DROP TABLE DOZENT;
DROP TABLE FACH;
DROP TABLE DOZENT_FACH;
DROP TABLE STUDENT_FACH;

CREATE TABLE STUDENT(
MARTIKELNUMMER INT PRIMARY KEY,
VORNAME VARCHAR(50),
NACHNAME VARCHAR(50),
GEBURTSTAG DATE
);
CREATE TABLE DOZENT(
DOZENTID INT PRIMARY KEY,
VORNAME VARCHAR(50),
NACHNAME VARCHAR(50)
);
CREATE TABLE FACH(
FACHID INT PRIMARY KEY,
TITEL VARCHAR(50),
KATEGORIE VARCHAR(100)
);
CREATE TABLE DOZENT_FACH(
DOZENTID INT ,
FACHID INT,
FOREIGN KEY(DOZENTID) REFERENCES DOZENT(DOZENTID),
FOREIGN KEY(FACHID) REFERENCES FACH(FACHID),
PRIMARY KEY (DOZENTID, FACHID)
);
CREATE TABLE STUDENT_FACH(
MARTIKELNUMMER INT,
FACHID INT,
FOREIGN KEY(MARTIKELNUMMER) REFERENCES STUDENT(MARTIKELNUMMER),
FOREIGN KEY(FACHID) REFERENCES FACH(FACHID),
PRIMARY KEY (MARTIKELNUMMER, FACHID)
);

INSERT INTO STUDENT VALUES (11, 'Robert', 'Roesler', '11-11-1990');
INSERT INTO STUDENT VALUES(22, 'Alan', 'Turing', '22-02-1920');
INSERT INTO STUDENT VALUES(33, 'Nil', 'Langdon', '13-03-1933');
INSERT INTO STUDENT VALUES(44, 'Marvin', 'Priveleg', '14-04-1994');
INSERT INTO STUDENT VALUES(55, 'Jonas', 'Klein', '15-05-1995');
INSERT INTO STUDENT VALUES(66, 'Nico', 'Grim', '16-06-1990');
INSERT INTO STUDENT VALUES(77, 'Nicolas', 'Zauber', '12-01-1992');
INSERT INTO STUDENT VALUES(88, 'Felix', 'Ulm', '12-06-1992');
INSERT INTO STUDENT VALUES(99, 'Lil', 'Cao', '12-02-1992');

INSERT INTO DOZENT VALUES(111, 'Andrea', 'Meisel');
INSERT INTO DOZENT VALUES(222, 'Phillip', 'Jenke');
INSERT INTO DOZENT VALUES(333, 'Steffen','Hartman');
INSERT INTO DOZENT VALUES(444, 'Hollatz', 'M�ller');
INSERT INTO DOZENT VALUES(555, 'Olaf','Frozen');
INSERT INTO DOZENT VALUES(666,'Anna','Sch�fer');
INSERT INTO DOZENT VALUES(777,'Nancy','Lynch');

INSERT INTO FACH VALUES (1 ,'MG','1.Sem');
INSERT INTO FACH VALUES (2,'AF','2.Sem');
INSERT INTO FACH VALUES (3,'DB','2.Sem');
INSERT INTO FACH VALUES (4,'BWL','5.Sem');
INSERT INTO FACH VALUES (5,'Funktionale Anylysis','6.Sem');
INSERT INTO FACH VALUES (6,'Mathe','1.Sem');
INSERT INTO FACH VALUES (7,'Math','00P');
INSERT INTO FACH VALUES (8,'Biologie','00P');

INSERT INTO DOZENT_FACH VALUES (333,3);
INSERT INTO DOZENT_FACH VALUES (444,4);
INSERT INTO DOZENT_FACH VALUES (111,1);
INSERT INTO DOZENT_FACH VALUES (222,2);
INSERT INTO DOZENT_FACH VALUES (222,6);
INSERT INTO DOZENT_FACH VALUES (111,6);
INSERT INTO DOZENT_FACH VALUES (111,2);
INSERT INTO DOZENT_FACH VALUES (777,3);
INSERT INTO DOZENT_FACH VALUES (777,6);
INSERT INTO DOZENT_FACH VALUES (111,7);
INSERT INTO DOZENT_FACH VALUES (111,8);

INSERT INTO STUDENT_FACH VALUES (11, 1);
INSERT INTO STUDENT_FACH VALUES (22,2);
INSERT INTO STUDENT_FACH VALUES (33,3);
INSERT INTO STUDENT_FACH VALUES (44,4);
INSERT INTO STUDENT_FACH VALUES (44,5);
INSERT INTO STUDENT_FACH VALUES (22,5);
INSERT INTO STUDENT_FACH VALUES (55,3);
INSERT INTO STUDENT_FACH VALUES (22,6);
INSERT INTO STUDENT_FACH VALUES (11,7);
INSERT INTO STUDENT_FACH VALUES (11,8);

/*Alle Studenten, die das Fach Funktionale Analysis belegen*/
SELECT STUDENT.*
FROM STUDENT, STUDENT_FACH, FACH
WHERE STUDENT.MARTIKELNUMMER = STUDENT_FACH.MARTIKELNUMMER AND FACH.FACHID = STUDENT_FACH.FACHID AND FACH.TITEL ='Funktionale Anylysis';

/*wie viele unterschiedliche Dozenten ein Fach unterrichten, das mathe in seinem titel hat*/
SELECT COUNT(DISTINCT DOZENTID) AS "DOZENT_ANZAHL"
FROM DOZENT_FACH, FACH
WHERE FACH.FACHID = DOZENT_FACH.FACHID AND LOWER(FACH.TITEL) LIKE '%mathe%';

/*Die Anzahl der 23 j�hrige Studenten*/
SELECT COUNT(*) AS "23_STUDENT"
FROM STUDENT
WHERE TRUNC ((SYSDATE - STUDENT.GEBURTSTAG)/ 365) = 23; 


/*Alle Dozenten(Vor und Nachname) die mehr als 2 Vorlesungen halten*/
SELECT COUNT(*) AS "ANZAHL_VOR",  DOZENT.VORNAME,DOZENT.NACHNAME
FROM DOZENT_FACH, DOZENT
WHERE DOZENT_FACH.DOZENTID = DOZENT.DOZENTID
GROUP BY DOZENT.DOZENTID, DOZENT.VORNAME, DOZENT.NACHNAME
HAVING COUNT(FACHID) > 2;

/*Vorname der Studenten und Dozenten nach alphabet sortieren*/


SELECT DOZENT.VORNAME
FROM DOZENT
UNION 
SELECT STUDENT.VORNAME
FROM STUDENT
ORDER BY VORNAME ASC;



/*alle Studenten(Vor und Nachname) die eine Vorlesung der Dozentin "Nancy Lynch" besuchen ?also nicht die, die 2 Vorlesung von der besuchen*/
SELECT DISTINCT STUDENT.VORNAME, STUDENT.NACHNAME, COUNT(*) AS "ANZAHL_VOR"
FROM STUDENT,STUDENT_FACH, DOZENT_FACH, DOZENT
WHERE STUDENT.MARTIKELNUMMER = STUDENT_FACH.MARTIKELNUMMER
AND DOZENT.DOZENTID = DOZENT_FACH.DOZENTID AND STUDENT_FACH.FACHID = DOZENT_FACH.FACHID 
AND DOZENT.VORNAME ='Nancy' AND DOZENT.NACHNAME = 'Lynch'
GROUP BY STUDENT.VORNAME, STUDENT.NACHNAME
HAVING COUNT(*) =1;

/*Was wird hier gefragt: die Martikelnummer alle Studenten,
die mehr als 1 F�cher von Kategorie 00P besuchen, was von einem Dozenten gehalten werden*/
SELECT STUDENT_FACH.MARTIKELNUMMER, COUNT(*) AS "ANZAHL_FACH_VON_DER_OOP"
FROM FACH, DOZENT_FACH, STUDENT_FACH
WHERE  FACH.FACHID = DOZENT_FACH.FACHID 
AND STUDENT_FACH.FACHID =DOZENT_FACH.FACHID AND FACH.KATEGORIE ='00P'
GROUP BY STUDENT_FACH.MARTIKELNUMMER
HAVING COUNT(*) > 1;
